<?php


namespace SkylarkSoft\GoRMG\Merchandising\Models;

use App\Casts\Json;
use App\Contracts\AuditAbleContract;
use App\Traits\AuditAble;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Auth;
use SkylarkSoft\GoRMG\SystemSettings\Models\Buyer;
use SkylarkSoft\GoRMG\SystemSettings\Models\Factory;
use SkylarkSoft\GoRMG\SystemSettings\Models\GarmentsItem;

class PoColorSizeBreakdown extends Model implements AuditAbleContract
{
    use SoftDeletes;
    use AuditAble;

    protected $table = 'po_item_color_size_details';

    protected $fillable = [
        'factory_id',
        'buyer_id',
        'order_id',
        'purchase_order_id',
        'garments_item_id',
        'colors',
        'sizes',
        'ratio_matrix',
        'quantity_matrix',
        'quantity',
        'item_wise_quantity',
        'color_types',
        'created_by',
        'updated_by',
        'deleted_by',
    ];

    protected $casts = [
        'colors' => Json::class,
        'sizes' => Json::class,
        'ratio_matrix' => Json::class,
        'quantity_matrix' => Json::class,
        'color_types' => Json::class,
    ];

    protected $appends = [
        'smv'
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function ($model) {
            $model->created_by = Auth::id();
        });

        static::updating(function ($model) {
            $model->updated_by = Auth::id();
        });

        static::deleting(function ($model) {
            $model->deleted_by = Auth::id();
        });
    }

    public function buyer(): BelongsTo
    {
        return $this->belongsTo(Buyer::class, 'buyer_id')->withDefault();
    }

    public function garmentItem(): BelongsTo
    {
        return $this->belongsTo(GarmentsItem::class, 'garments_item_id')->withDefault();
    }

    public function purchaseOrder(): BelongsTo
    {
        return $this->belongsTo(PurchaseOrder::class, 'purchase_order_id')->withDefault();
    }

    public function order(): BelongsTo
    {
        return $this->belongsTo(Order::class, 'order_id')->withDefault();
    }

    public function factory(): BelongsTo
    {
        return $this->belongsTo(Factory::class, 'factory_id')->withDefault();
    }

    public function getSmvAttribute()
    {
        $order_id = $this->order_id;
        $garments_item_id = $this->garments_item_id;
        return Order::getOrderItemWiseFactorySMV($order_id, $garments_item_id) ?? Order::getOrderItemWiseSMV($order_id, $garments_item_id) ?? 0;
    }

    public function moduleName(): string
    {
        return 'merchandising';
    }

    public function path(): string
    {
        return url("orders/edit?order_id=".$this->order_id);
    }
}
